/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-12-20 03:22:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class productList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
 String ctxPath = request.getContextPath(); 
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/productList.css\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.print( ctxPath );
      out.write("/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print( ctxPath );
      out.write("/js_ysl/productList.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t\r\n");
      out.write("\t// YSL\r\n");
      out.write("// \t$(\"#totalYSLCount\").hide();\r\n");
      out.write("\t$(\"#countYSL\").hide();\r\n");
      out.write("\t    \r\n");
      out.write("\t// \"더 로드하기...\" 초기갑 호출 \r\n");
      out.write("\tdisplayYSL(\"1\");\r\n");
      out.write("\t\r\n");
      out.write("\t// \"더 로드하기...\" 이벤트 등록하기\r\n");
      out.write("\t$(\"#btnMoreYSL\").bind(\"click\", function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tdisplayYSL($(this).val());\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("}); // end of $(document).ready(function(){\r\n");
      out.write("\r\n");
      out.write("// 모든상품 \" 더보기 ... \" 버튼을 클릭할 때 보여줄 상품의 개수(단위)크기\r\n");
      out.write("var lenYSL = 9;\r\n");
      out.write("\r\n");
      out.write("//컴마 만들어주는 함수\r\n");
      out.write("function numberWithCommas(x) {\r\n");
      out.write("    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// display 할 YSL 상품정보를 추가요청하기 (Ajax 로 처리함)\r\n");
      out.write("function displayYSL(start) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print( ctxPath );
      out.write("/productListALL.ysl\", \r\n");
      out.write("\t\ttype:\"GET\", \r\n");
      out.write("\t\tdata:{\"pspec\":\"YSL\"\r\n");
      out.write("\t\t\t ,\"start\":start\r\n");
      out.write("\t\t\t ,\"len\":lenYSL},\r\n");
      out.write("\t\tdataType:\"json\",\r\n");
      out.write("\t\tsuccess:function(json){\r\n");
      out.write("\t\t\t//alert(\"성공\"); // json 데이터가 넘어오면 alert\r\n");
      out.write("\t\t\tvar html = \"\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(json.length == 0) { // 데이터가 존재하지 않는 경우\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#btnMoreYSL\").hide();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse { // 데이터가 존재하는 경우\r\n");
      out.write("\t\t\t\t$.each(json, function(index, item){\r\n");
      out.write("\t\t\t\t\tif((index+1)%3 != 0) {\r\n");
      out.write("\t\t\t\t\t\thtml += \"<article class='item'>\" \r\n");
      out.write("\t\t\t\t\t\t\t  + \"<div class='image' >\"\t\r\n");
      out.write("\t\t\t\t\t\t\t  + \"<a href='/SaintLaura/productDetail.ysl?pnum=\"+item.pnum+\"' style='text-decoration: none;'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \"<img class='listViewImage mainImage' src='/SaintLaura/images_Product/\"+item.pimage1+\"' style='width: 300px; height: 440px;'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \"<img class='listViewImage hoverImage' src='/SaintLaura/images_Product/\"+item.pimage2+\"' style='width: 300px; height: 440px;' >\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \"</div><br>\"\r\n");
      out.write("\t\t\t\t\t\t\t  \r\n");
      out.write(" \t\t\t\t\t\t\t  + \"<div id='infoBox'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\"<div class='info'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\t\"<span class='info'>\"+(item.pname).substr(0,24)+\"<br>\"+(item.pname).substr(25,43)+\"<br>\"+(item.pname).substr(44,100)+\"</span><br><br>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\t\"<span class='info'>&#8361; &nbsp;</span>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\t\"<span class='info'>\"+numberWithCommas(item.price)+\"</span><br><br>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\"</div>\"\r\n");
      out.write("\t\t\t\t\t\t      + \"</div>\"\r\n");
      out.write("\t\t\t\t\t\t      + \"</a>\"\r\n");
      out.write("\t\t\t\t\t\t \t  + \"</article>\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\thtml += \"<article class='item'>\" \r\n");
      out.write("\t\t\t\t\t\t\t  + \"<div class='image' >\"\t\r\n");
      out.write("\t\t\t\t\t\t\t  + \"<a href='/SaintLaura/productDetail.ysl?pnum=\"+item.pnum+\"' style='text-decoration: none;'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \"<img class='listViewImage mainImage' src='/SaintLaura/images_Product/\"+item.pimage1+\"' style='width: 300px; height: 440px;'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \"<img class='listViewImage hoverImage' src='/SaintLaura/images_Product/\"+item.pimage2+\"' style='width: 300px; height: 440px;' >\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \"</div><br>\"\r\n");
      out.write("\t\t\t\t\t\t\t  \r\n");
      out.write(" \t\t\t\t\t\t\t  + \"<div id='infoBox'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\"<div class='info'>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\t\"<span class='info'>\"+(item.pname).substr(0,24)+\"<br>\"+(item.pname).substr(25,43)+\"<br>\"+(item.pname).substr(44,100)+\"</span><br><br>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\t\"<span class='info'>&#8361; &nbsp;</span>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\t\"<span class='info'>\"+numberWithCommas(item.price)+\"</span><br><br>\"\r\n");
      out.write("\t\t\t\t\t\t\t  + \t\"</div>\"\r\n");
      out.write("\t\t\t\t\t\t      + \"</div>\"\r\n");
      out.write("\t\t\t\t\t\t      + \"</a>\"\r\n");
      out.write("\t\t\t\t\t\t      + \"</article>\" + \"<br>\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//YSL 상품결과를 출력하기\r\n");
      out.write("\t\t\t\t$(\"#displayYSL\").append(html);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// hover\r\n");
      out.write("\t\t\t\t$(\".hoverImage\").hide();\r\n");
      out.write("\t\t\t\t$(\".item\").hover(function () {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\t$(this).find(\".mainImage\").css('display','none');\r\n");
      out.write("\t\t\t\t\t$(this).find(\".hoverImage\").css('display','');\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}, function () {\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(this).find(\".mainImage\").css('display','');\r\n");
      out.write("\t\t\t\t\t$(this).find(\".hoverImage\").css('display','none');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 더로드하기... 버튼의 value 속성에 값을 지정하기\r\n");
      out.write("\t\t\t\t$(\"#btnMoreYSL\").val(parseInt(start)+lenYSL);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// countYSL 에 지금까지 출력된 상품의 개수를 누적해서 기록한다.\r\n");
      out.write("\t\t\t\t$(\"#countYSL\").text( parseInt($(\"#countYSL\").text()) + json.length );\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif( $(\"#countYSL\").text() == $(\"#totalYSLCount\").text() ) {\r\n");
      out.write("\t\t\t\t\t$(\"#btnMoreYSL\").hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(request, status, error){\r\n");
      out.write("\t\t\talert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\t\t\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div id=\"displayYSL\" ></div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div id=\"moveTable\">\r\n");
      out.write("\t\t\t<button type=\"button\" id=\"btnMoreYSL\" value=\"\" class=\"theload\">더 로드하기..</button>\r\n");
      out.write("\t\t\t<span id=\"totalYSLCount\" style=\"display: none;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalYSLCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("\t\t\t<span id=\"countYSL\">0</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br><br><br>\r\n");
      out.write("\t  \r\n");
      out.write("\t\r\n");
      out.write("\t <!-- 페이징 처리 -->\r\n");
      out.write("<!-- \t<nav class=\"bottomNav\" aria-label=\"Page navigation example\"> -->\r\n");
      out.write("<!--   \t\t<ul class=\"pagination pg-blue\"> -->\r\n");
      out.write("<!--     \t\t<li class=\"page-item\"> -->\r\n");
      out.write("<!--       \t\t\t<a class=\"page-link\" aria-label=\"Previous\"> -->\r\n");
      out.write("<!--         \t\t\t<span aria-hidden=\"true\">&laquo;</span> -->\r\n");
      out.write("<!--         \t\t\t<span class=\"sr-only\">Previous</span> -->\r\n");
      out.write("<!--       \t\t\t</a> -->\r\n");
      out.write("<!--     \t\t</li> -->\r\n");
      out.write("<!--     \t\t<li class=\"page-item\"><a class=\"page-link\">1</a></li> -->\r\n");
      out.write("<!--     \t\t<li class=\"page-item\"><a class=\"page-link\">2</a></li> -->\r\n");
      out.write("<!--     \t\t<li class=\"page-item\"><a class=\"page-link\">3</a></li> -->\r\n");
      out.write("<!--     \t\t<li class=\"page-item\"> -->\r\n");
      out.write("<!--       \t\t\t<a class=\"page-link\" aria-label=\"Next\"> -->\r\n");
      out.write("<!--         \t\t\t<span aria-hidden=\"true\">&raquo;</span> -->\r\n");
      out.write("<!--         \t\t\t<span class=\"sr-only\">Next</span> -->\r\n");
      out.write("<!--       \t\t\t</a> -->\r\n");
      out.write("<!--     \t\t</li> -->\r\n");
      out.write("<!--   \t\t</ul> -->\r\n");
      out.write("<!-- \t</nav> -->\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
