/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-12-05 02:18:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.myshop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mallHome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1572935183810L));
    _jspx_dependants.put("jar:file:/C:/myjsp/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MyMVC/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.moreProdInfo {\r\n");
      out.write("\t\tdisplay: inline-block;\r\n");
      out.write("\t\tmargin: 10px;\r\n");
      out.write("\t /* border: solid 1px navy; \r\n");
      out.write("\t    width: 200px; */\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#totalHITCount\").hide();\r\n");
      out.write("\t\t$(\"#countHIT\").hide();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// HIT상품 게시물을 더보기 위하여 \"더보기...\" 버튼 클릭액션에 대해 초기값 호출  \r\n");
      out.write("\t\tdisplayHIT(\"1\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// HIT상품 게시물을 더보기 위하여 \"더보기...\" 버튼 클릭액션의 이벤트 등록하기 \r\n");
      out.write("\t\t$(\"#btnMoreHIT\").click(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(this).text() == \"처음으로\") {\r\n");
      out.write("\t\t\t\t$(\"#displayHIT\").empty();\r\n");
      out.write("\t\t\t\tdisplayHIT(\"1\");\r\n");
      out.write("\t\t\t\t$(this).text(\"더보기...\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\tdisplayHIT($(this).val());\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t});// end of $(document).ready()---------------\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//// ======== HIT 시작 ======== ////\r\n");
      out.write("\t\r\n");
      out.write("\tvar lenHIT = 8; \r\n");
      out.write("\t// HIT 상품 \"더보기...\" 버튼을 클릭할때 보여줄 상품의 갯수(단위)크기 \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// display할 HIT상품 정보를 추가 요청하기(Ajax로 처리함)\r\n");
      out.write("\tfunction displayHIT(start) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"/MyMVC/shop/mallDisplayJSON.up\",\r\n");
      out.write("\t\t//\ttype:\"GET\",\r\n");
      out.write("\t\t    data:{\"pspec\":\"HIT\"\r\n");
      out.write("\t\t    \t ,\"start\":start\r\n");
      out.write("\t\t    \t ,\"len\":lenHIT},\r\n");
      out.write("\t\t    dataType:\"JSON\",\r\n");
      out.write("\t\t    success:function(json){\r\n");
      out.write("\t\t    \tvar html = \"\";\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    \tif(json.length == 0) {\r\n");
      out.write("\t\t    \t\t// 데이터가 존재하지 않는 경우\r\n");
      out.write("\t\t    \t\t// !!! 주의 !!!\r\n");
      out.write("\t\t    \t\t// if(json == null) 이 아님!!!\r\n");
      out.write("\t\t    \t\t// if(json.length == 0) 으로 해야함!!\r\n");
      out.write("\t\t    \t\thtml += \"현재 상품 준비중....\";\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t\t// HIT 상품 결과를 출력하기\r\n");
      out.write("\t\t    \t\t$(\"#displayHIT\").html(html);\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t\t// 더보기... 버튼의 비활성화 처리\r\n");
      out.write("\t\t    \t\t$(\"#btnMoreHIT\").attr(\"disabled\", true).css(\"cursor\",\"not-allowed\");\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t}\r\n");
      out.write("\t\t    \telse {\r\n");
      out.write("\t\t    \t\t// 데이터가 존재하는 경우\r\n");
      out.write("\t\t    \t\t$.each(json, function(index, item){\r\n");
      out.write("\t\t    \t\t\tif((index+1)%4 != 0) {\r\n");
      out.write("\t\t    \t\t\t\thtml += \"<div class='moreProdInfo'><a href='/MyMVC/shop/prodView.up?pnum=\"+item.pnum+\"'><img width='120px;' height='130px;' src='/MyMVC/images/\"+item.pimage1+\"'/></a>\"\r\n");
      out.write("\t\t    \t\t\t\t         + \"<br/>\"\r\n");
      out.write("\t\t    \t\t\t\t         + \"제품명 : \"+item.pname+\"<br/>\"\r\n");
      out.write("\t\t        \t                 + \"정가 : <span style=\\\"color: red; text-decoration: line-through;\\\">\"+(item.price).toLocaleString('en')+\" 원</span><br/>\"\r\n");
      out.write("\t\t        \t                 + \"판매가 : <span style=\\\"color: red; font-weight: bold;\\\">\"+(item.saleprice).toLocaleString('en')+\" 원</span><br/>\"\r\n");
      out.write("\t\t        \t                 + \"할인율 : <span style=\\\"color: blue; font-weight: bold;\\\">[\"+item.discoutPercent+\"%] 할인</span><br/>\"\r\n");
      out.write("\t\t        \t                 + \"포인트 : <span style=\\\"color: orange;\\\">\"+item.point+\" POINT</span><br/>\"\r\n");
      out.write("\t\t    \t\t\t\t       +\"</div>\";\r\n");
      out.write("\t\t    \t\t\t}\r\n");
      out.write("\t\t    \t\t\telse {\r\n");
      out.write("\t\t    \t\t\t\thtml += \"<div class='moreProdInfo'><a href='/MyMVC/shop/prodView.up?pnum=\"+item.pnum+\"'><img width='120px;' height='130px;' src='/MyMVC/images/\"+item.pimage1+\"'/></a>\"\r\n");
      out.write("\t\t\t\t    \t\t\t\t + \"<br/>\"\r\n");
      out.write("\t\t   \t\t\t\t             + \"제품명 : \"+item.pname+\"<br/>\"\r\n");
      out.write("\t\t       \t                     + \"정가 : <span style=\\\"color: red; text-decoration: line-through;\\\">\"+(item.price).toLocaleString('en')+\" 원</span><br/>\"\r\n");
      out.write("\t\t       \t                     + \"판매가 : <span style=\\\"color: red; font-weight: bold;\\\">\"+(item.saleprice).toLocaleString('en')+\" 원</span><br/>\"\r\n");
      out.write("\t\t       \t                     + \"할인율 : <span style=\\\"color: blue; font-weight: bold;\\\">[\"+item.discoutPercent+\"%] 할인</span><br/>\"\r\n");
      out.write("\t\t       \t                     + \"포인트 : <span style=\\\"color: orange;\\\">\"+item.point+\" POINT</span><br/>\"\r\n");
      out.write("\t\t   \t\t\t\t           +\"</div>\";\r\n");
      out.write("\t\t    \t\t\t\thtml += \"<br/>\";\r\n");
      out.write("\t\t    \t\t\t}\r\n");
      out.write("\t\t    \t\t});\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t\t// HIT 상품 결과를 출력하기\r\n");
      out.write("\t\t    \t\t$(\"#displayHIT\").append(html);\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t\t// >>> (중요!!!) 더보기... 버튼의 value 속성에 값을 지정하기 <<< //\r\n");
      out.write("\t\t    \t\t$(\"#btnMoreHIT\").val(parseInt(start)+lenHIT);\r\n");
      out.write("\t\t    \t\t// 더보기... 버튼의 value 값이 9 로 변경된다.\r\n");
      out.write("\t\t    \t\t// 더보기... 버튼의 value 값이 17 로 변경된다.\r\n");
      out.write("\t\t    \t\t// 더보기... 버튼의 value 값이 25 로 변경된다.\r\n");
      out.write("\t\t    \t\t// 더보기... 버튼의 value 값이 33 로 변경된다.\r\n");
      out.write("\t\t    \t\t// 더보기... 버튼의 value 값이 41 로 변경된다.\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t\t// countHIT 에 지금까지 출력된 상품의 갯수를 누적해서 기록한다. \r\n");
      out.write("\t\t    \t\t$(\"#countHIT\").text( parseInt($(\"#countHIT\").text()) + json.length);\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t\t// 더보기... 버튼을 계속해서 클릭하여 countHIT 값과 totalHITCount 값이 일치하는 경우 \r\n");
      out.write("\t\t    \t\t// 버튼의 이름을 \"처음으로\" 라고 변경하고 countHIT 0 으로 초기화 해야 한다.\r\n");
      out.write("\t\t    \t\tif( $(\"#countHIT\").text() == $(\"#totalHITCount\").text() ) { \r\n");
      out.write("\t\t    \t\t\t$(\"#btnMoreHIT\").text(\"처음으로\");\r\n");
      out.write("\t\t    \t\t\t$(\"#countHIT\").text(\"0\");\r\n");
      out.write("\t\t    \t\t}\r\n");
      out.write("\t\t    \t\t\r\n");
      out.write("\t\t    \t}\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    error: function(request, status, error){\r\n");
      out.write("\t\t\t\talert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//// ======== HIT 끝  ======== ////\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//// ======== NEW 시작 ======== ////\r\n");
      out.write("\t\r\n");
      out.write("\t//// ======== NEW 끝 ======== ////\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("    \r\n");
      out.write(" <h2>::: 쇼핑몰 상품 :::</h2>\r\n");
      out.write(" <br/>    \r\n");
      out.write("  \r\n");
      out.write(" ");
      out.write("\r\n");
      out.write(" <div>\r\n");
      out.write(" \t<div style=\"margin: 10px; font-size: 16pt;\">- HIT 상품 -</div>\r\n");
      out.write(" \t<div id=\"displayHIT\"></div>\r\n");
      out.write(" \t\r\n");
      out.write(" \t<div>\r\n");
      out.write(" \t\t<button type=\"button\" id=\"btnMoreHIT\" value=\"\">더보기...</button>\r\n");
      out.write(" \t\t<span id=\"totalHITCount\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalHITCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write(" \t\t<span id=\"countHIT\">0</span>\r\n");
      out.write(" \t</div>\r\n");
      out.write(" </div>  \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");
      out.write("  \r\n");
      out.write("    \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer.jsp", out, false);
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
