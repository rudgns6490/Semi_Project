/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-12-16 01:39:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class coinPurchaseTypeChoice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1572935183810L));
    _jspx_dependants.put("jar:file:/C:/myjsp/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MyMVC/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String ctxPath = request.getContextPath();
    //    /MyMVC

      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print( ctxPath );
      out.write("/css/style.css\" />\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\tspan {margin-right: 10px;}\r\n");
      out.write("\t\t\t\t\t\t \r\n");
      out.write("\t.stylePoint {color: red; \r\n");
      out.write("\t             font-weight: bold;\r\n");
      out.write("\t             font-size: 13pt;}\r\n");
      out.write("\t             \r\n");
      out.write("\t.purchase {cursor: pointer;\r\n");
      out.write("\t           color: red;\r\n");
      out.write("\t           font-weight: bold;}             \r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    var coinmoney = 0;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#error\").hide();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// $(\":input[name=coinmoney]:radio\")\r\n");
      out.write("\t\t$(\"input:radio[name=coinmoney]\").bind(\"click\", function(){\r\n");
      out.write("\t\t\tcoinmoney = $(this).val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t //  var i = $(this).index();\r\n");
      out.write("\t\t //  alert(\"확인용 : \" + i);  // 무조건 0. 왜냐하면 $(this)내에서 인덱스를 찾기 때문이다.\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t var index = $(\"input:radio[name=coinmoney]\").index(this); // 올바른 index 가 나온다.\r\n");
      out.write("\t\t //\t alert(\"확인용 : \" + index); // 0 1 2 3 4 5 6 7 8 중 하나가 나온다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t     $(\"td span\").removeClass(\"stylePoint\");\r\n");
      out.write("\t\t     $(\"td span\").eq(index).addClass(\"stylePoint\");\r\n");
      out.write("\t\t     // $(\"td span\").eq(index) ==> 배열요소를 꺼내는 것과 비슷함.\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t $(\"#error\").hide();\r\n");
      out.write("\t\t});// end of $(\"input:radio[name=coinmoney]\").bind(\"click\")-----------\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#purchase\").hover(function(){\r\n");
      out.write("\t\t\t\t\t\t\t\t$(this).addClass(\"purchase\");\r\n");
      out.write("\t\t                     }, \r\n");
      out.write("\t\t                     function(){\r\n");
      out.write("\t\t                    \t $(this).removeClass(\"purchase\"); \r\n");
      out.write("\t\t                     });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#purchase\").click(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t   var checkedCnt = $(\"input:radio[name=coinmoney]:checked\").length;\r\n");
      out.write("\t\t   \r\n");
      out.write("\t\t   if(checkedCnt == 0) {\r\n");
      out.write("\t\t\t// 결제금액을 선택하지 않았을 경우\r\n");
      out.write("\t\t\t   $(\"#error\").show();\r\n");
      out.write("\t\t\t   return;\r\n");
      out.write("\t\t   } \r\n");
      out.write("\t\t   else {\r\n");
      out.write("\t\t\t// 결제금액을 선택했을 경우\r\n");
      out.write("\t\t\t   $(\"#error\").hide();\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t/* === 팝업창에서 부모창 함수 호출 방법 3가지 ===\r\n");
      out.write("\t\t\t    1-1. 일반적인 방법\r\n");
      out.write("\t\t\t\topener.location.href = \"javascript:부모창스크립트 함수명();\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t1-2. 일반적인 방법\r\n");
      out.write("\t\t\t\twindow.opener.부모창스크립트 함수명();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t2. jQuery를 이용한 방법\r\n");
      out.write("\t\t\t\t$(opener.location).attr(\"href\", \"javascript:부모창스크립트 함수명();\");\r\n");
      out.write("\t\t\t*/\r\n");
      out.write("\t\t\t// opener.location.href = \"javascript:goCoinPurchaseEnd('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', \"+coinmoney+\");\"; \r\n");
      out.write("\t\t\t// window.opener.goCoinPurchaseEnd('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', coinmoney); \r\n");
      out.write("\t\t\t   $(opener.location).attr(\"href\", \"javascript:goCoinPurchaseEnd('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', \"+coinmoney+\");\"); \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t   self.close();\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   \r\n");
      out.write("\t\t});// end of $(\"#purchase\").click()--------\r\n");
      out.write("\t\t\r\n");
      out.write("\t});// end of $(document).ready()----------------\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\t\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t  <h2>코인충천 결제방식 선택</h2>\r\n");
      out.write("\t  <p>코인충전 금액 높을수록 POINT를 무료로 많이 드립니다.</p> \r\n");
      out.write("\t  \r\n");
      out.write("\t  <div class=\"table-responsive\" style=\"margin-top: 30px;\">           \r\n");
      out.write("\t\t  <table class=\"table\">\r\n");
      out.write("\t\t    <thead>\r\n");
      out.write("\t\t      <tr>\r\n");
      out.write("\t\t        <th>결제종류</th>\r\n");
      out.write("\t\t        <th>금액</th>\r\n");
      out.write("\t\t        <th>POINT</th>\r\n");
      out.write("\t\t      </tr>\r\n");
      out.write("\t\t    </thead>\r\n");
      out.write("\t\t    <tbody>\r\n");
      out.write("\t\t      <tr>\r\n");
      out.write("\t\t        <td>신용카드</td>\r\n");
      out.write("\t\t        <td>\r\n");
      out.write("\t\t\t        <label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" id=\"coinmoney1\" value=\"300000\" />300,000원</label>\r\n");
      out.write("\t\t\t\t\t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"200000\" />200,000원</label>\r\n");
      out.write("\t\t\t\t\t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"100000\" />100,000원</label>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t        <td>\r\n");
      out.write("\t\t\t\t\t<span class=\"point3\">3000</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"point2\">2000</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"point1\">1000</span>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t      </tr>\r\n");
      out.write("\t\t      <tr>\r\n");
      out.write("\t\t        <td>휴대폰결제</td>\r\n");
      out.write("\t\t        <td>\r\n");
      out.write("\t\t        \t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"300000\" />300,000원</label>\r\n");
      out.write("\t\t\t\t\t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"200000\" />200,000원</label>\r\n");
      out.write("\t\t\t\t\t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"100000\" />100,000원</label>\r\n");
      out.write("\t\t        </td>\r\n");
      out.write("\t\t        <td>\r\n");
      out.write("\t\t        \t<span class=\"point3\">3000</span>\r\n");
      out.write("\t\t        \t<span class=\"point2\">2000</span>\r\n");
      out.write("\t\t        \t<span class=\"point1\">1000</span>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t      </tr>\r\n");
      out.write("\t\t      <tr>\r\n");
      out.write("\t\t        <td>카카오페이</td>\r\n");
      out.write("\t\t        <td>\r\n");
      out.write("\t\t        \t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"300000\" />300,000원</label>\r\n");
      out.write("\t\t\t\t\t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"200000\" />200,000원</label>\r\n");
      out.write("\t\t\t\t\t<label class=\"radio-inline\"><input type=\"radio\" name=\"coinmoney\" class=\"coinmoney\" value=\"100000\" />100,000원</label>\r\n");
      out.write("\t\t        </td>\r\n");
      out.write("\t\t        <td>\r\n");
      out.write("\t\t        \t<span class=\"point3\">3000</span>\r\n");
      out.write("\t\t        \t<span class=\"point2\">2000</span>\r\n");
      out.write("\t\t        \t<span class=\"point1\">1000</span>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t      </tr>\r\n");
      out.write("\t\t      <tr>\r\n");
      out.write("\t\t      \t<td id=\"error\" colspan=\"3\" align=\"center\" style=\"height: 50px; vertical-align: middle; color: red;\">결제종류에 따른 금액을 선택하세요!!</td>\r\n");
      out.write("\t\t      </tr>\r\n");
      out.write("\t\t      <tr>\r\n");
      out.write("\t\t        <td id=\"purchase\" colspan=\"3\" align=\"center\" style=\"height: 100px; vertical-align: middle;\">[충전결제하기]</td>\r\n");
      out.write("\t\t      </tr>\r\n");
      out.write("\t\t    </tbody>\r\n");
      out.write("\t\t  </table>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
