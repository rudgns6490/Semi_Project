/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-12-20 02:32:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.hm_005fMypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class semi_005fMypage_005fDeleteUser_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header_dog.jsp", out, false);
      out.write("\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/Semi_Team1/css/hm/style.css\" /> \n");
 String ctxPath = request.getContextPath(); 
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$(document).ready(function(){\n");
      out.write("\t$(\".delUserBtn\").hover(\n");
      out.write("\t\t\tfunction(){\n");
      out.write("\t\t\t\t$(this).removeClass(\"delUserBtn\");\n");
      out.write("\t\t\t\t$(this).addClass(\"cancelBtn\");\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tfunction(){\n");
      out.write("\t\t\t\t$(this).removeClass(\"cancelBtn\");\n");
      out.write("\t\t\t\t$(this).addClass(\"delUserBtn\");\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\n");
      out.write("\t$(\".cancelBtn\").hover(\n");
      out.write("\t\tfunction(){\n");
      out.write("\t\t\t$(this).removeClass(\"cancelBtn\");\n");
      out.write("\t\t\t$(this).addClass(\"delUserBtn\");\n");
      out.write("\t\t\t$(this).css(\"color\",\"white\");\n");
      out.write("\t\t},\n");
      out.write("\t\tfunction(){\n");
      out.write("\t\t\t$(this).removeClass(\"delUserBtn\");\n");
      out.write("\t\t\t$(this).addClass(\"cancelBtn\");\n");
      out.write("\t\t\t$(this).css(\"color\",\"#231f20\");\n");
      out.write("\t\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#delUserBtn\").click(function(){\n");
      out.write("\t\tdelMember();\t\t\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#input_text\").on('keyup', function() {\n");
      out.write("\t\tif($(this).val().length > 300) {\n");
      out.write("\t\t\talert(\"300자 이내로 입력하세요\");\n");
      out.write("\t\t\t$(this).val($(this).val().substring(0, 300));\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("});\n");
      out.write("\n");
      out.write("function delMember(){\n");
      out.write("\tif(confirm(\"회원을 탈퇴하시겠습니까?\") == true){\n");
      out.write("\t\tvar frm = document.textAreaFrm;\n");
      out.write("\t\t\n");
      out.write("\t\tfrm.method = \"POST\";\n");
      out.write("\t\tfrm.action = \"deleteUser.dog\";\n");
      out.write("\t\tfrm.submit();\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<title>회원정보 탈퇴신청</title>\n");
      out.write("<div id=\"login_container\">\n");
      out.write("<h1 class=\"hm_h1\">마이페이지</h1>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "semi_Mypage_Submenu.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(\"#subtabli11 > a\").addClass('subtabClick');\n");
      out.write("\t$(\".subTab\").hide();\n");
      out.write("\t$(\"#tab3\").addClass(\"tabClick\")\n");
      out.write("\t$(\".subTab:eq(2)\").show();\n");
      out.write("\t$(\"#top_comment\").html(\"Home>Mypage>회원탈퇴\");\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<h1 class=\"hm_h1\" style=\"margin-bottom: 20px; margin-top: 100px;\">회원정보 탈퇴신청</h1>\n");
      out.write("<p class=\"ptxt\">\n");
      out.write("저희 쇼핑몰의 부족했던 점과 아쉬웠던 점을 적어주십시오. 더 좋은 모습으로 발전하도록 최선을 다하겠습니다. <br/>\n");
      out.write("앞으로 더 나은 모습으로 고객님을 다시 만날 수 있도록 노력하겠습니다. 그동안 이용해주신 것을 진심으로 감사드립니다. <br />\n");
      out.write("</p>\n");
      out.write("<form name=\"textAreaFrm\">\n");
      out.write("\t<p class=\"ptxt\" style=\"color: black;\">탈퇴 사유를 적어주시면 쇼핑몰 운영에 적극 반영하겠습니다.</p>\n");
      out.write("\t<textarea class=\"input_textarea\" id=\"input_text\" name=\"input_text\" rows=\"10\" cols=\"70\" ></textarea>\n");
      out.write("</form>\n");
      out.write("<div id=\"btnArea\">\n");
      out.write("\t<a class=\"btn delUserBtn\" id=\"delUserBtn\">회원탈퇴</a>\n");
      out.write("\t<a class=\"btn cancelBtn\" id=\"cancelBtn\" href=\"javascript:history.back()\">취소하기</a>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer_dog.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
