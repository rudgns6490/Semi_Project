/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-12-19 10:57:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class paymentGatewaykakao_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\" ></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://service.iamport.kr/js/iamport.payment-1.1.2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t//\t여기 링크를 꼭 참고하세용 http://www.iamport.kr/getstarted\r\n");
      out.write("   var IMP = window.IMP;     // 생략가능\r\n");
      out.write("   IMP.init('imp08049163');  // 중요!!  아임포트에 가입시 부여받은 \"가맹점 식별코드\". \r\n");
      out.write("\t\r\n");
      out.write("   // 결제요청하기\r\n");
      out.write("   IMP.request_pay({\r\n");
      out.write("       pg : 'kakaopay', // 결제방식 PG사 구분\r\n");
      out.write("       pay_method : 'card',\t// 결제 수단\r\n");
      out.write("       merchant_uid : 'merchant_' + new Date().getTime(), // 가맹점에서 생성/관리하는 고유 주문번호\r\n");
      out.write("       name : '하빈펫푸드 상품 결제',\t // 제목, 코인충전 또는 order 테이블에 들어갈 주문명 혹은 주문 번호. (선택항목)원활한 결제정보 확인을 위해 입력 권장(PG사 마다 차이가 있지만) 16자 이내로 작성하기를 권장\r\n");
      out.write("       amount : 10,\t  // 원래는 '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${paymoney}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'  결제 금액 number 타입. 필수항목. \r\n");
      out.write("       buyer_email : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',  // 구매자 email, 지금은 생략\r\n");
      out.write("       buyer_name : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\t  // 구매자 이름  (session에서 꺼내온 name)\r\n");
      out.write("       buyer_tel : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${phone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',    // 구매자 전화번호 (필수항목)\r\n");
      out.write("       buyer_addr : '',  \r\n");
      out.write("       buyer_postcode : '',\r\n");
      out.write("       m_redirect_url : ''  // 휴대폰 사용시 결제 완료 후 action : 컨트롤러로 보내서 자체 db에 입력시킬것! (돈을 보냈으니 db의 코인에 업뎃)\r\n");
      out.write(" \t\t//아래의 데스크답버전과 다르게 모바일은 결제가 끝나고 한단계 더 거쳐야함  , 직접 idx와 coinmoney         누구인지 알아야하므로 idx\r\n");
      out.write("   }, function(rsp) {\r\n");
      out.write("\r\n");
      out.write("\t   /*\r\n");
      out.write("\t\t   if ( rsp.success ) {\r\n");
      out.write("\t\t\t   var msg = '결제가 완료되었습니다.';\r\n");
      out.write("\t\t\t   msg += '고유ID : ' + rsp.imp_uid;\r\n");
      out.write("\t\t\t   msg += '상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("\t\t\t   msg += '결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("\t\t\t   msg += '카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("\t\t   } else {\r\n");
      out.write("\t\t\t   var msg = '결제에 실패하였습니다.';\r\n");
      out.write("\t\t\t   msg += '에러내용 : ' + rsp.error_msg;\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   alert(msg);\r\n");
      out.write("\t   */\r\n");
      out.write("\r\n");
      out.write("\t\tif ( rsp.success ) { // PC 데스크탑용, 결제 성공 후에 할 일\r\n");
      out.write("\t\t/* === 팝업창에서 부모창 함수 호출 방법 3가지 ===\r\n");
      out.write("\t\t    1-1. 일반적인 방법\r\n");
      out.write("\t\t\topener.location.href = \"javascript:부모창스크립트 함수명();\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t1-2. 일반적인 방법\r\n");
      out.write("\t\t\twindow.opener.부모창스크립트 함수명();\r\n");
      out.write("\r\n");
      out.write("\t\t\t2. jQuery를 이용한 방법\r\n");
      out.write("\t\t\t$(opener.location).attr(\"href\", \"javascript:부모창스크립트 함수명();\");\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t//\topener.location.href = \"javascript:goCoinUpdate('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${coinmoney}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\";\r\n");
      out.write("\t//\t\twindow.opener.goCoinUpdate('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${coinmoney}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); //결제 성공이니 업데이트\r\n");
      out.write("\t\t//  $(opener.location).attr(\"href\", \"javascript:goCoinUpdate('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${coinmoney}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar frm = opener.document.orderFrm;\r\n");
      out.write("\t\t\tfrm.method=\"POST\";\r\n");
      out.write("\t\t\tfrm.action=\"/Semi_Team1/shop/orderEnd.dog\"\r\n");
      out.write("\t\t\tfrm.submit();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t    self.close();\r\n");
      out.write("\t\t\t\r\n");
      out.write("        } else {\r\n");
      out.write("          //  location.href=\"/shop/basket.dog \";\r\n");
      out.write("            alert(\"결제에 실패하였습니다.\");\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("   }); // end of IMP.request_pay()----------------------------\r\n");
      out.write("\r\n");
      out.write("}); // end of $(document).ready()-----------------------------\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\t\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
