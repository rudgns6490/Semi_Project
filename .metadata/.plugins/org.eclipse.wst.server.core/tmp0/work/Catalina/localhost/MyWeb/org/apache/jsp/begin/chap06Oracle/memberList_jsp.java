/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2019-11-21 08:29:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.begin.chap06Oracle;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import begin.chap06.oracle.model.MemberVO;

public final class memberList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("begin.chap06.oracle.model.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");

	Object obj = request.getAttribute("memberList");

    List<MemberVO> memberList = null;
    
    if(obj != null) {
   	   memberList = (List<MemberVO>) obj;
    }

      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원목록 보여주기</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\tdiv#container {\r\n");
      out.write("\t\twidth: 95%;\r\n");
      out.write("\t\tmargin: 0 auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\ttable {\r\n");
      out.write("\t\twidth: 90%;\r\n");
      out.write("\t\tborder: solid 1px gray;\r\n");
      out.write("\t\tborder-collapse: collapse;\r\n");
      out.write("\t\tmargin-top: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tth, td {\r\n");
      out.write("\t\tborder: solid 1px gray;\r\n");
      out.write("\t\tborder-collapse: collapse;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\ttbody tr:hover {\r\n");
      out.write("\t\tbackground-color: #ccc;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tbutton { \r\n");
      out.write("\t\tmargin-top: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction goMemberDetail(userid) {\r\n");
      out.write("\t //\talert(\"회원아이디 \"+userid+\"님의 상세 정보를 보여줄 것입니다.\");\r\n");
      out.write("\t\r\n");
      out.write("\t // 자바스크립트에서 페이지 이동하기\r\n");
      out.write("\t // location.href=\"이동해야할 페이지 URL주소\"; 로 한다.\r\n");
      out.write("\t    location.href=\"detailMemberInfo.do?userid=\"+userid;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t\t<h2>회원목록 보기</h2>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t\t\t<th>아이디</th>\r\n");
      out.write("\t\t\t\t\t<th>회원명</th>\r\n");
      out.write("\t\t\t\t\t<th>이메일</th>\r\n");
      out.write("\t\t\t\t\t<th>가입일자</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t");

			if(memberList != null) {
				// 가입된 회원이 존재하는 경우 
				for(int i=0; i<memberList.size(); i++) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td onclick=\"goMemberDetail('");
      out.print( memberList.get(i).getUserid() );
      out.write("');\">");
      out.print( i+1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td onclick=\"goMemberDetail('");
      out.print( memberList.get(i).getUserid() );
      out.write("');\">");
      out.print( memberList.get(i).getUserid() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td onclick=\"goMemberDetail('");
      out.print( memberList.get(i).getUserid() );
      out.write("');\">");
      out.print( memberList.get(i).getName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td onclick=\"goMemberDetail('");
      out.print( memberList.get(i).getUserid() );
      out.write("');\">");
      out.print( memberList.get(i).getEmail() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td onclick=\"goMemberDetail('");
      out.print( memberList.get(i).getUserid() );
      out.write("');\">");
      out.print( memberList.get(i).getRegisterday() );
      out.write("</td> \r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");
	}// end of for----------------------
			}
		
			else {
				// 가입된 회원이 1명도 없는 경우  
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"5\">존재하는 회원이 없습니다</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t ");
	} 
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<button type=\"button\" onclick=\"javascript:location.href='memberRegister.do'\">회원가입</button> \r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
