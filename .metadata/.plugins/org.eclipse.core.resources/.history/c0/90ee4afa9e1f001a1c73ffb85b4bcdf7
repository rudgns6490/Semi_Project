package myshop.controller;

import java.util.HashMap;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.json.simple.JSONObject;

import common.controller.AbstractController;
import member.model.MemberVO;
import myshop.model.InterProductDAO;
import myshop.model.ProductDAO;
import net.nurigo.java_sdk.api.Message;
import net.nurigo.java_sdk.exceptions.CoolsmsException;

public class DeliverEndAction extends AbstractController {

	@Override
	public void execute(HttpServletRequest request, HttpServletResponse response) throws Exception {

		String method = request.getMethod();
		
		if(!"POST".equalsIgnoreCase(method)) {
			String message = "비정상적인 경로로 들어왔습니다.";
			String loc = "javascript:history.back();";
			
			request.setAttribute("message", message);
			request.setAttribute("loc", loc);
			
			super.setRedirect(false);
			super.setViewPage("/WEB-INF/msg.jsp");
			
			return;
		}
				
		// === 로그인 유무 검사하기 === //
		boolean isLogIn = super.checkLogin(request);
		
		if(!isLogIn) {
			request.setAttribute("message", "배송완료를 하시려면 먼저 로그인 부터 하세요!!");
			request.setAttribute("loc", "javascript:history.back()"); 
			
		//	super.setRedirect(false);
			super.setViewPage("/WEB-INF/msg.jsp");
			return;
		}
		
		else {
			HttpSession session = request.getSession();
			
			MemberVO loginuser = (MemberVO)session.getAttribute("loginuser");
			String userid = loginuser.getUserid();
			
			if(!"admin".equals(userid) ) {
				String message = "접근불가!! 관리자가 아닙니다.";
				String loc = "javascript:history.back()";
				
				request.setAttribute("message", message);
				request.setAttribute("loc", loc);
				
				super.setRedirect(false);
				super.setViewPage("/WEB-INF/msg.jsp");
				
				return;
			}
			
			else {
				// admin(관리자)으로 로그인 한 경우 
				String[] odrcodeArr = request.getParameterValues("odrcode");
				String[] pnumArr = request.getParameterValues("pnum"); 
			    
				InterProductDAO pdao = new ProductDAO(); 
				
				StringBuilder sb = new StringBuilder();
				// 's20191214-3/1','s20191214-4/3','s20191214-5/2'
				// 's20191214-3은 영수증번호(전표)'이고 /뒤에 붙은 1 은 제품번호이다.
				// 's20191214-4은 영수증번호(전표)'이고 /뒤에 붙은 3 은 제품번호이다.
				// 's20191214-5은 영수증번호(전표)'이고 /뒤에 붙은 2 은 제품번호이다.
				// 이것은 오라클에서 영수증번호(전표)컬럼||'/'||제품번호 로 하겠다는 말이다.
				
				for(int i=0; i<odrcodeArr.length; i++) {
					sb.append("\'"+odrcodeArr[i]+"/");
					sb.append(pnumArr[i]+"\',");  // sql 문의 where 절에 in('전표/제품번호','전표/제품번호','전표/제품번호') 을 사용하기 위한 것이다. 
				}
				
				String odrcodePnum = sb.toString();
				
				odrcodePnum = odrcodePnum.substring(0, odrcodePnum.length()-1);
				// 맨뒤의 콤마(,)제거하기 
				
				// jsp_order_detail 테이블의 deliverstatus(배송상태) 컬럼의 값을 3(배송완료)로 변경하기
				int n = pdao.updateDeliverEnd(odrcodePnum, odrcodeArr.length);
				
				if(n==1) {
			    	String message = "선택하신 제품들은 배송완료로 변경되었습니다.";
					String loc = "/MyMVC/shop/orderList.up";
					
					request.setAttribute("message", message);
					request.setAttribute("loc", loc);
					
					super.setRedirect(false);
					super.setViewPage("/WEB-INF/msg.jsp");
				}
				else {
					String message = "선택하신 제품들은 배송완료로 변경이 실패되었습니다.";
					String loc = "javascript:history.back();";
					
					request.setAttribute("message", message);
					request.setAttribute("loc", loc);
					
					super.setRedirect(false);
					super.setViewPage("/WEB-INF/msg.jsp");
				}
			}	
	   
		}

	}

}
